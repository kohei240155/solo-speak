{
  "name": "solo-speak",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "dev:local": "cp .env.local .env && next dev",
    "dev:production": "cp .env.production .env && next dev",
    "build": "next build",
    "build:local": "cp .env.local .env && next build",
    "build:production": "cp .env.production .env && next build",
    "start": "next start",
    "lint": "next lint",
    "clean-start": "if exist .next rmdir /s /q .next && npm run dev",
    "db:push": "prisma db push",
    "db:push:local": "cp .env.local .env && prisma db push",
    "db:push:production": "cp .env.production .env && prisma db push",
    "db:migrate": "prisma migrate dev",
    "db:migrate:local": "cp .env.local .env && prisma migrate dev",
    "db:migrate:production": "cp .env.production .env && prisma migrate dev",
    "db:studio": "prisma studio",
    "db:studio:local": "cp .env.local .env && prisma studio",
    "db:studio:production": "cp .env.production .env && prisma studio",
    "db:seed": "tsx prisma/seed.ts",
    "db:seed:local": "cp .env.local .env && tsx prisma/seed.ts",
    "db:seed:production": "cp .env.production .env && tsx prisma/seed.ts",
    "generate": "prisma generate",
    "postinstall": "prisma generate",
    "diagnose:db": "tsx scripts/diagnose-production-db.ts",
    "insert:languages": "tsx scripts/insert-production-languages.ts",
    "setup:phrase-levels": "tsx scripts/setup-phrase-levels.ts",
    "setup:phrase-levels:local": "cp .env.local .env && tsx scripts/setup-phrase-levels.ts",
    "setup:phrase-levels:production": "cp .env.production .env && tsx scripts/setup-phrase-levels.ts",
    "update:phrase-levels": "tsx scripts/update-phrase-levels.ts",
    "update:phrase-levels:local": "cp .env.local .env && tsx scripts/update-phrase-levels.ts",
    "update:phrase-levels:production": "cp .env.production .env && tsx scripts/update-phrase-levels.ts",
    "reset:production-db": "tsx scripts/reset-production-database.ts",
    "reset:production-db:production": "cp .env.production .env && tsx scripts/reset-production-database.ts",
    "recreate:tables": "tsx scripts/recreate-production-tables.ts",
    "recreate:tables:production": "cp .env.production .env && tsx scripts/recreate-production-tables.ts",
    "seed:production": "tsx scripts/seed-production-data.ts",
    "seed:production:production": "cp .env.production .env && tsx scripts/seed-production-data.ts",
    "cleanup:phrase-levels": "tsx scripts/cleanup-phrase-levels.ts",
    "cleanup:phrase-levels:local": "cp .env.local .env && tsx scripts/cleanup-phrase-levels.ts",
    "cleanup:phrase-levels:production": "cp .env.production .env && tsx scripts/cleanup-phrase-levels.ts",
    "test:phrase-levels": "tsx scripts/test-phrase-level-logic.ts"
  },
  "dependencies": {
    "@hookform/resolvers": "^5.1.1",
    "@prisma/client": "^6.11.1",
    "@supabase/auth-ui-react": "^0.4.7",
    "@supabase/auth-ui-shared": "^0.1.8",
    "@supabase/supabase-js": "^2.51.0",
    "dotenv": "^17.2.0",
    "next": "15.3.5",
    "openai": "^5.10.1",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-hook-form": "^7.60.0",
    "react-hot-toast": "^2.5.2",
    "react-icons": "^5.5.0",
    "react-image-crop": "^11.0.10",
    "swr": "^2.3.4",
    "uuid": "^11.1.0",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@tailwindcss/postcss": "^4",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@types/uuid": "^10.0.0",
    "eslint": "^9",
    "eslint-config-next": "15.3.5",
    "prisma": "^6.11.1",
    "tailwindcss": "^4",
    "tsx": "^4.20.3",
    "typescript": "^5"
  }
}
