generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                         String    @id @default(cuid())
  username                   String    @unique
  iconUrl                    String?   @map("icon_url")
  nativeLanguageId           String    @map("native_language_id")
  defaultLearningLanguageId  String    @map("default_learning_language_id")
  birthdate                  DateTime?
  gender                     Gender?
  email                      String    @unique
  defaultQuizCount           Int       @default(10) @map("default_quiz_count")
  stripeCustomerId           String?   @map("stripe_customer_id")
  remainingPhraseGenerations Int       @default(100) @map("remaining_phrase_generations")
  consecutiveReadingDays     Int       @default(0) @map("consecutive_reading_days")
  lastReadingDate            DateTime? @map("last_reading_date")
  createdAt                  DateTime  @default(now()) @map("created_at")
  updatedAt                  DateTime  @updatedAt @map("updated_at")
  deletedAt                  DateTime? @map("deleted_at")
  phrases                    Phrase[]
  defaultLearningLanguage    Language  @relation("UserLearningLanguage", fields: [defaultLearningLanguageId], references: [id])
  nativeLanguage             Language  @relation("UserNativeLanguage", fields: [nativeLanguageId], references: [id])

  @@map("users")
}

model Language {
  id            String    @id @default(cuid())
  name          String
  code          String    @unique
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  deletedAt     DateTime? @map("deleted_at")
  phrases       Phrase[]
  learningUsers User[]    @relation("UserLearningLanguage")
  nativeUsers   User[]    @relation("UserNativeLanguage")

  @@map("languages")
}

model PhraseLevel {
  id        String    @id @default(cuid())
  name      String
  score     Int
  color     String?
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  phrases   Phrase[]

  @@map("phrase_levels")
}

model Phrase {
  id                 String       @id @default(cuid())
  userId             String       @map("user_id")
  languageId         String       @map("language_id")
  text               String
  translation        String
  totalReadCount     Int          @default(0) @map("total_read_count")
  dailyReadCount     Int          @default(0) @map("daily_read_count")
  correctQuizCount   Int          @default(0) @map("correct_quiz_count")
  incorrectQuizCount Int          @default(0) @map("incorrect_quiz_count")
  phraseLevelId      String       @map("phrase_level_id")
  createdAt          DateTime     @default(now()) @map("created_at")
  updatedAt          DateTime     @updatedAt @map("updated_at")
  deletedAt          DateTime?    @map("deleted_at")
  language           Language     @relation(fields: [languageId], references: [id])
  phraseLevel        PhraseLevel  @relation(fields: [phraseLevelId], references: [id])
  user               User         @relation(fields: [userId], references: [id])
  quizResults        QuizResult[]
  speakLogs          SpeakLog[]

  @@index([userId, languageId, createdAt(sort: Desc)], map: "idx_phrases_user_language_created")
  @@index([userId, createdAt(sort: Desc)], map: "idx_phrases_user_created")
  @@map("phrases")
}

model QuizResult {
  id        String    @id @default(cuid())
  phraseId  String    @map("phrase_id")
  date      DateTime
  correct   Boolean
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  phrase    Phrase    @relation(fields: [phraseId], references: [id])

  @@map("quiz_results")
}

model SpeakLog {
  id        String    @id @default(cuid())
  phraseId  String    @map("phrase_id")
  date      DateTime
  count     Int       @default(1)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  phrase    Phrase    @relation(fields: [phraseId], references: [id])

  @@map("speak_logs")
}

enum Gender {
  male
  female
  unspecified
}
